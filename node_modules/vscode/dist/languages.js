import './polyfill.js';
import { j as ExtensionMessageCollector } from './missing-services.js';
import { W as WorkbenchLanguageService } from './languageService.js';
import { g as getExtensionPoint, c as consoleExtensionMessageHandler } from './tools.js';
import { bd as DEFAULT_EXTENSION } from './extHost.js';
import { S as Services } from './services2.js';
import { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';
import { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';
const languageExtensionPoint = getExtensionPoint('languages');
function setLanguages(language, extension = Services.get().extension ?? DEFAULT_EXTENSION) {
    languageExtensionPoint.acceptUsers([{
            description: extension,
            value: language,
            collector: new ExtensionMessageCollector(consoleExtensionMessageHandler, extension, languageExtensionPoint.name)
        }]);
}
function getServiceOverride() {
    return {
        [( ILanguageService.toString())]: new SyncDescriptor(WorkbenchLanguageService)
    };
}
export { getServiceOverride as default, setLanguages };
